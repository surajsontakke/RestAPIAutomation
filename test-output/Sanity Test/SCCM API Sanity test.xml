<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="CSCO-W-PF32ZV1R" failures="9" tests="19" name="SCCM API Sanity test" time="23.657" errors="0" timestamp="2021-10-09T17:12:26 IST">
  <testcase classname="com.java.qa.sccm.test.LoginTest" name="loginTestValidation" time="4.971"/>
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.8"/>
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.774">
    <failure type="java.lang.AssertionError" message="expected [customer_name cannot be empty] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [customer_name cannot be empty] but found [null]
at com.java.qa.sccm.test.CreateCustomerTest.createCustomer(CreateCustomerTest.java:92)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- createCustomer -->
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.746">
    <failure type="java.lang.AssertionError" message="expected [Kindly provide valid values of customer_name] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [Kindly provide valid values of customer_name] but found [null]
at com.java.qa.sccm.test.CreateCustomerTest.createCustomer(CreateCustomerTest.java:97)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- createCustomer -->
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.728">
    <failure type="java.lang.AssertionError" message="expected [customer_id cannot be empty] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [customer_id cannot be empty] but found [null]
at com.java.qa.sccm.test.CreateCustomerTest.createCustomer(CreateCustomerTest.java:102)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- createCustomer -->
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.876">
    <failure type="java.lang.AssertionError" message="expected [Kindly provide valid values of customer_id] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [Kindly provide valid values of customer_id] but found [null]
at com.java.qa.sccm.test.CreateCustomerTest.createCustomer(CreateCustomerTest.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- createCustomer -->
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.937">
    <failure type="java.lang.AssertionError" message="expected [short_name cannot be empty] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [short_name cannot be empty] but found [null]
at com.java.qa.sccm.test.CreateCustomerTest.createCustomer(CreateCustomerTest.java:112)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- createCustomer -->
  <testcase classname="com.java.qa.sccm.test.CreateCustomerTest" name="createCustomer" time="0.867"/>
  <testcase classname="com.java.qa.sccm.test.GetCustomerDataTest" name="GetCustomer" time="1.693"/>
  <testcase classname="com.java.qa.sccm.test.GetCustomerDataTest" name="GetCustomer" time="0.881"/>
  <testcase classname="com.java.qa.sccm.test.GetCustomerDataTest" name="GetCustomer" time="0.847">
    <failure type="java.lang.AssertionError" message="expected [5002] but found [5003]">
      <![CDATA[java.lang.AssertionError: expected [5002] but found [5003]
at com.java.qa.sccm.test.GetCustomerDataTest.GetCustomer(GetCustomerDataTest.java:84)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- GetCustomer -->
  <testcase classname="com.java.qa.sccm.test.UpdateCustomerTest" name="updateCustomer" time="0.83"/>
  <testcase classname="com.java.qa.sccm.test.UpdateCustomerTest" name="updateCustomer" time="0.705">
    <failure type="java.lang.AssertionError" message="expected [customer_id cannot be empty] but found [Customer Resource Not Found]">
      <![CDATA[java.lang.AssertionError: expected [customer_id cannot be empty] but found [Customer Resource Not Found]
at com.java.qa.sccm.test.UpdateCustomerTest.updateCustomer(UpdateCustomerTest.java:86)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- updateCustomer -->
  <testcase classname="com.java.qa.sccm.test.UpdateCustomerTest" name="updateCustomer" time="0.723">
    <failure type="java.lang.AssertionError" message="expected [Invalid customer_id] but found [Customer Resource Not Found]">
      <![CDATA[java.lang.AssertionError: expected [Invalid customer_id] but found [Customer Resource Not Found]
at com.java.qa.sccm.test.UpdateCustomerTest.updateCustomer(UpdateCustomerTest.java:91)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- updateCustomer -->
  <testcase classname="com.java.qa.sccm.test.DeleteCustomerTest" name="DeleteCustomer" time="1.411"/>
  <testcase classname="com.java.qa.sccm.test.DeleteCustomerTest" name="DeleteCustomer" time="1.356"/>
  <testcase classname="com.java.qa.sccm.test.DeleteCustomerTest" name="DeleteCustomer" time="2.058"/>
  <testcase classname="com.java.qa.sccm.test.Step1Test" name="Step1" time="1.186"/>
  <testcase classname="com.java.qa.sccm.test.Step2Test" name="Step2" time="0.819">
    <failure type="io.restassured.path.json.exception.JsonPathException" message="Failed to parse the JSON document">
      <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
at io.restassured.path.json.JsonPath.get(JsonPath.java:190)
at com.java.qa.sccm.test.Step2Test.Step2(Step2Test.java:85)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: groovy.json.JsonException: A JSON payload should start with an openning curly brace '{' or an openning square bracket '['.
Instead, '"Undefined array key "endpoint_devices"  |  #0 /var/www/html/SCCM/sccm_api/modules/versiSatu/controllers/ServicedeployController.php(455): yii\base\ErrorHandler->handleError()
#1 [internal function]: app\modules\versiSatu\controllers\ServicedeployController->actionStep2()
#2 /var/www/html/SCCM/vendor/yiisoft/yii2/base/InlineAction.php(57): call_user_func_array()
#3 /var/www/html/SCCM/vendor/yiisoft/yii2/base/Controller.php(181): yii\base\InlineAction->runWithParams()
#4 /var/www/html/SCCM/vendor/yiisoft/yii2/base/Module.php(534): yii\base\Controller->runAction()
#5 /var/www/html/SCCM/vendor/yiisoft/yii2/web/Application.php(104): yii\base\Module->runAction()
#6 /var/www/html/SCCM/vendor/yiisoft/yii2/base/Application.php(392): yii\web\Application->handleRequest()
#7 /var/www/html/SCCM/sccm_api/web/index.php(32): yii\base\Application->run()
#8 {main}"' was found on line: 1, column: 1
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:114)
at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
... 33 more
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- Step2 -->
</testsuite> <!-- SCCM API Sanity test -->
